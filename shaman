#!/usr/bin/env python2.7
# coding: utf-8
#
# Shaman - track TV shows
# Copyright (C) 2011-2013 Miro Bezjak
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import webbrowser
from os import path
from PyQt4.QtCore import *
from PyQt4.QtGui import *
from PyQt4.QtWebKit import *

home      = path.dirname(path.realpath(__file__))
datafile  = path.join(home, 'data.json')
indexfile = path.join(home, 'index.html')
iconfile  = path.join(home, 'resources/shaman.png')

# The amount of problems I have had with the following 40 line code is
# astonishing. Either I'm the most unlucky man ever and have hit every single
# regression and/or breaking change out there or the stability of python2,
# python2-pyqy4, qtwebkit, python2-sip together is seriously questionable. I'm
# not fond of those packages - at all.

class Storage(QObject):
    "Provides storage to shaman web application"

    @pyqtSlot(result=str)
    def read(self):
        if path.isfile(datafile):
            with open(datafile, 'r+') as f:
                return f.read()
        else: return '[]'

    @pyqtSlot(QString)
    def write(self, value):
        with open(datafile, 'w+') as f:
            f.write(str(value))

class Browser(QObject):
    "Provides ability to open url links"

    @pyqtSlot(QString)
    def open(self, link):
        webbrowser.open(str(link))

class WebPage(QWebPage):
    def javaScriptConsoleMessage(self, msg, line, source):
        print '{}:{} => {}'.format(source, line, msg)


app = QApplication(sys.argv)
app.setWindowIcon(QIcon(iconfile))
web = QWebView()
web.setPage(WebPage())
web.load(QUrl("file://" + indexfile))

# this shit does not work unless we keep the reference
frame   = web.page().mainFrame()
storage = Storage()
browser = Browser()
frame.addToJavaScriptWindowObject('shamanStorage', storage)
frame.addToJavaScriptWindowObject('shamanBrowser', browser)

web.show()
sys.exit(app.exec_())
